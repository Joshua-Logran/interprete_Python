Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> ID ASSIGN expresion
Rule 2     statement -> PRINT LPAREN expresion RPAREN
Rule 3     expresion -> expresion PLUS expresion
Rule 4     expresion -> expresion MINUS expresion
Rule 5     expresion -> expresion TIMES expresion
Rule 6     expresion -> expresion DIVIDE expresion
Rule 7     expresion -> MINUS expresion
Rule 8     expresion -> LPAREN expresion RPAREN
Rule 9     expresion -> NUM
Rule 10    expresion -> COMPLEX
Rule 11    expresion -> ID
Rule 12    expresion -> SQRT LPAREN expresion RPAREN

Terminals, with rules where they appear

ASSIGN               : 1
COMPLEX              : 10
DIVIDE               : 6
ID                   : 1 11
LPAREN               : 2 8 12
MINUS                : 4 7
NUM                  : 9
PLUS                 : 3
PRINT                : 2
RPAREN               : 2 8 12
SQRT                 : 12
TIMES                : 5
error                : 

Nonterminals, with rules where they appear

expresion            : 1 2 3 3 4 4 5 5 6 6 7 8 12
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . ID ASSIGN expresion
    (2) statement -> . PRINT LPAREN expresion RPAREN

    ID              shift and go to state 2
    PRINT           shift and go to state 3

    statement                      shift and go to state 1

state 1

    (0) S' -> statement .



state 2

    (1) statement -> ID . ASSIGN expresion

    ASSIGN          shift and go to state 4


state 3

    (2) statement -> PRINT . LPAREN expresion RPAREN

    LPAREN          shift and go to state 5


state 4

    (1) statement -> ID ASSIGN . expresion
    (3) expresion -> . expresion PLUS expresion
    (4) expresion -> . expresion MINUS expresion
    (5) expresion -> . expresion TIMES expresion
    (6) expresion -> . expresion DIVIDE expresion
    (7) expresion -> . MINUS expresion
    (8) expresion -> . LPAREN expresion RPAREN
    (9) expresion -> . NUM
    (10) expresion -> . COMPLEX
    (11) expresion -> . ID
    (12) expresion -> . SQRT LPAREN expresion RPAREN

    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUM             shift and go to state 10
    COMPLEX         shift and go to state 11
    ID              shift and go to state 6
    SQRT            shift and go to state 12

    expresion                      shift and go to state 7

state 5

    (2) statement -> PRINT LPAREN . expresion RPAREN
    (3) expresion -> . expresion PLUS expresion
    (4) expresion -> . expresion MINUS expresion
    (5) expresion -> . expresion TIMES expresion
    (6) expresion -> . expresion DIVIDE expresion
    (7) expresion -> . MINUS expresion
    (8) expresion -> . LPAREN expresion RPAREN
    (9) expresion -> . NUM
    (10) expresion -> . COMPLEX
    (11) expresion -> . ID
    (12) expresion -> . SQRT LPAREN expresion RPAREN

    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUM             shift and go to state 10
    COMPLEX         shift and go to state 11
    ID              shift and go to state 6
    SQRT            shift and go to state 12

    expresion                      shift and go to state 13

state 6

    (11) expresion -> ID .

    PLUS            reduce using rule 11 (expresion -> ID .)
    MINUS           reduce using rule 11 (expresion -> ID .)
    TIMES           reduce using rule 11 (expresion -> ID .)
    DIVIDE          reduce using rule 11 (expresion -> ID .)
    $end            reduce using rule 11 (expresion -> ID .)
    RPAREN          reduce using rule 11 (expresion -> ID .)


state 7

    (1) statement -> ID ASSIGN expresion .
    (3) expresion -> expresion . PLUS expresion
    (4) expresion -> expresion . MINUS expresion
    (5) expresion -> expresion . TIMES expresion
    (6) expresion -> expresion . DIVIDE expresion

    $end            reduce using rule 1 (statement -> ID ASSIGN expresion .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17


state 8

    (7) expresion -> MINUS . expresion
    (3) expresion -> . expresion PLUS expresion
    (4) expresion -> . expresion MINUS expresion
    (5) expresion -> . expresion TIMES expresion
    (6) expresion -> . expresion DIVIDE expresion
    (7) expresion -> . MINUS expresion
    (8) expresion -> . LPAREN expresion RPAREN
    (9) expresion -> . NUM
    (10) expresion -> . COMPLEX
    (11) expresion -> . ID
    (12) expresion -> . SQRT LPAREN expresion RPAREN

    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUM             shift and go to state 10
    COMPLEX         shift and go to state 11
    ID              shift and go to state 6
    SQRT            shift and go to state 12

    expresion                      shift and go to state 18

state 9

    (8) expresion -> LPAREN . expresion RPAREN
    (3) expresion -> . expresion PLUS expresion
    (4) expresion -> . expresion MINUS expresion
    (5) expresion -> . expresion TIMES expresion
    (6) expresion -> . expresion DIVIDE expresion
    (7) expresion -> . MINUS expresion
    (8) expresion -> . LPAREN expresion RPAREN
    (9) expresion -> . NUM
    (10) expresion -> . COMPLEX
    (11) expresion -> . ID
    (12) expresion -> . SQRT LPAREN expresion RPAREN

    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUM             shift and go to state 10
    COMPLEX         shift and go to state 11
    ID              shift and go to state 6
    SQRT            shift and go to state 12

    expresion                      shift and go to state 19

state 10

    (9) expresion -> NUM .

    PLUS            reduce using rule 9 (expresion -> NUM .)
    MINUS           reduce using rule 9 (expresion -> NUM .)
    TIMES           reduce using rule 9 (expresion -> NUM .)
    DIVIDE          reduce using rule 9 (expresion -> NUM .)
    $end            reduce using rule 9 (expresion -> NUM .)
    RPAREN          reduce using rule 9 (expresion -> NUM .)


state 11

    (10) expresion -> COMPLEX .

    PLUS            reduce using rule 10 (expresion -> COMPLEX .)
    MINUS           reduce using rule 10 (expresion -> COMPLEX .)
    TIMES           reduce using rule 10 (expresion -> COMPLEX .)
    DIVIDE          reduce using rule 10 (expresion -> COMPLEX .)
    $end            reduce using rule 10 (expresion -> COMPLEX .)
    RPAREN          reduce using rule 10 (expresion -> COMPLEX .)


state 12

    (12) expresion -> SQRT . LPAREN expresion RPAREN

    LPAREN          shift and go to state 20


state 13

    (2) statement -> PRINT LPAREN expresion . RPAREN
    (3) expresion -> expresion . PLUS expresion
    (4) expresion -> expresion . MINUS expresion
    (5) expresion -> expresion . TIMES expresion
    (6) expresion -> expresion . DIVIDE expresion

    RPAREN          shift and go to state 21
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17


state 14

    (3) expresion -> expresion PLUS . expresion
    (3) expresion -> . expresion PLUS expresion
    (4) expresion -> . expresion MINUS expresion
    (5) expresion -> . expresion TIMES expresion
    (6) expresion -> . expresion DIVIDE expresion
    (7) expresion -> . MINUS expresion
    (8) expresion -> . LPAREN expresion RPAREN
    (9) expresion -> . NUM
    (10) expresion -> . COMPLEX
    (11) expresion -> . ID
    (12) expresion -> . SQRT LPAREN expresion RPAREN

    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUM             shift and go to state 10
    COMPLEX         shift and go to state 11
    ID              shift and go to state 6
    SQRT            shift and go to state 12

    expresion                      shift and go to state 22

state 15

    (4) expresion -> expresion MINUS . expresion
    (3) expresion -> . expresion PLUS expresion
    (4) expresion -> . expresion MINUS expresion
    (5) expresion -> . expresion TIMES expresion
    (6) expresion -> . expresion DIVIDE expresion
    (7) expresion -> . MINUS expresion
    (8) expresion -> . LPAREN expresion RPAREN
    (9) expresion -> . NUM
    (10) expresion -> . COMPLEX
    (11) expresion -> . ID
    (12) expresion -> . SQRT LPAREN expresion RPAREN

    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUM             shift and go to state 10
    COMPLEX         shift and go to state 11
    ID              shift and go to state 6
    SQRT            shift and go to state 12

    expresion                      shift and go to state 23

state 16

    (5) expresion -> expresion TIMES . expresion
    (3) expresion -> . expresion PLUS expresion
    (4) expresion -> . expresion MINUS expresion
    (5) expresion -> . expresion TIMES expresion
    (6) expresion -> . expresion DIVIDE expresion
    (7) expresion -> . MINUS expresion
    (8) expresion -> . LPAREN expresion RPAREN
    (9) expresion -> . NUM
    (10) expresion -> . COMPLEX
    (11) expresion -> . ID
    (12) expresion -> . SQRT LPAREN expresion RPAREN

    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUM             shift and go to state 10
    COMPLEX         shift and go to state 11
    ID              shift and go to state 6
    SQRT            shift and go to state 12

    expresion                      shift and go to state 24

state 17

    (6) expresion -> expresion DIVIDE . expresion
    (3) expresion -> . expresion PLUS expresion
    (4) expresion -> . expresion MINUS expresion
    (5) expresion -> . expresion TIMES expresion
    (6) expresion -> . expresion DIVIDE expresion
    (7) expresion -> . MINUS expresion
    (8) expresion -> . LPAREN expresion RPAREN
    (9) expresion -> . NUM
    (10) expresion -> . COMPLEX
    (11) expresion -> . ID
    (12) expresion -> . SQRT LPAREN expresion RPAREN

    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUM             shift and go to state 10
    COMPLEX         shift and go to state 11
    ID              shift and go to state 6
    SQRT            shift and go to state 12

    expresion                      shift and go to state 25

state 18

    (7) expresion -> MINUS expresion .
    (3) expresion -> expresion . PLUS expresion
    (4) expresion -> expresion . MINUS expresion
    (5) expresion -> expresion . TIMES expresion
    (6) expresion -> expresion . DIVIDE expresion

    PLUS            reduce using rule 7 (expresion -> MINUS expresion .)
    MINUS           reduce using rule 7 (expresion -> MINUS expresion .)
    TIMES           reduce using rule 7 (expresion -> MINUS expresion .)
    DIVIDE          reduce using rule 7 (expresion -> MINUS expresion .)
    $end            reduce using rule 7 (expresion -> MINUS expresion .)
    RPAREN          reduce using rule 7 (expresion -> MINUS expresion .)

  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]
  ! TIMES           [ shift and go to state 16 ]
  ! DIVIDE          [ shift and go to state 17 ]


state 19

    (8) expresion -> LPAREN expresion . RPAREN
    (3) expresion -> expresion . PLUS expresion
    (4) expresion -> expresion . MINUS expresion
    (5) expresion -> expresion . TIMES expresion
    (6) expresion -> expresion . DIVIDE expresion

    RPAREN          shift and go to state 26
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17


state 20

    (12) expresion -> SQRT LPAREN . expresion RPAREN
    (3) expresion -> . expresion PLUS expresion
    (4) expresion -> . expresion MINUS expresion
    (5) expresion -> . expresion TIMES expresion
    (6) expresion -> . expresion DIVIDE expresion
    (7) expresion -> . MINUS expresion
    (8) expresion -> . LPAREN expresion RPAREN
    (9) expresion -> . NUM
    (10) expresion -> . COMPLEX
    (11) expresion -> . ID
    (12) expresion -> . SQRT LPAREN expresion RPAREN

    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUM             shift and go to state 10
    COMPLEX         shift and go to state 11
    ID              shift and go to state 6
    SQRT            shift and go to state 12

    expresion                      shift and go to state 27

state 21

    (2) statement -> PRINT LPAREN expresion RPAREN .

    $end            reduce using rule 2 (statement -> PRINT LPAREN expresion RPAREN .)


state 22

    (3) expresion -> expresion PLUS expresion .
    (3) expresion -> expresion . PLUS expresion
    (4) expresion -> expresion . MINUS expresion
    (5) expresion -> expresion . TIMES expresion
    (6) expresion -> expresion . DIVIDE expresion

    PLUS            reduce using rule 3 (expresion -> expresion PLUS expresion .)
    MINUS           reduce using rule 3 (expresion -> expresion PLUS expresion .)
    $end            reduce using rule 3 (expresion -> expresion PLUS expresion .)
    RPAREN          reduce using rule 3 (expresion -> expresion PLUS expresion .)
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17

  ! TIMES           [ reduce using rule 3 (expresion -> expresion PLUS expresion .) ]
  ! DIVIDE          [ reduce using rule 3 (expresion -> expresion PLUS expresion .) ]
  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]


state 23

    (4) expresion -> expresion MINUS expresion .
    (3) expresion -> expresion . PLUS expresion
    (4) expresion -> expresion . MINUS expresion
    (5) expresion -> expresion . TIMES expresion
    (6) expresion -> expresion . DIVIDE expresion

    PLUS            reduce using rule 4 (expresion -> expresion MINUS expresion .)
    MINUS           reduce using rule 4 (expresion -> expresion MINUS expresion .)
    $end            reduce using rule 4 (expresion -> expresion MINUS expresion .)
    RPAREN          reduce using rule 4 (expresion -> expresion MINUS expresion .)
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17

  ! TIMES           [ reduce using rule 4 (expresion -> expresion MINUS expresion .) ]
  ! DIVIDE          [ reduce using rule 4 (expresion -> expresion MINUS expresion .) ]
  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]


state 24

    (5) expresion -> expresion TIMES expresion .
    (3) expresion -> expresion . PLUS expresion
    (4) expresion -> expresion . MINUS expresion
    (5) expresion -> expresion . TIMES expresion
    (6) expresion -> expresion . DIVIDE expresion

    PLUS            reduce using rule 5 (expresion -> expresion TIMES expresion .)
    MINUS           reduce using rule 5 (expresion -> expresion TIMES expresion .)
    TIMES           reduce using rule 5 (expresion -> expresion TIMES expresion .)
    DIVIDE          reduce using rule 5 (expresion -> expresion TIMES expresion .)
    $end            reduce using rule 5 (expresion -> expresion TIMES expresion .)
    RPAREN          reduce using rule 5 (expresion -> expresion TIMES expresion .)

  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]
  ! TIMES           [ shift and go to state 16 ]
  ! DIVIDE          [ shift and go to state 17 ]


state 25

    (6) expresion -> expresion DIVIDE expresion .
    (3) expresion -> expresion . PLUS expresion
    (4) expresion -> expresion . MINUS expresion
    (5) expresion -> expresion . TIMES expresion
    (6) expresion -> expresion . DIVIDE expresion

    PLUS            reduce using rule 6 (expresion -> expresion DIVIDE expresion .)
    MINUS           reduce using rule 6 (expresion -> expresion DIVIDE expresion .)
    TIMES           reduce using rule 6 (expresion -> expresion DIVIDE expresion .)
    DIVIDE          reduce using rule 6 (expresion -> expresion DIVIDE expresion .)
    $end            reduce using rule 6 (expresion -> expresion DIVIDE expresion .)
    RPAREN          reduce using rule 6 (expresion -> expresion DIVIDE expresion .)

  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]
  ! TIMES           [ shift and go to state 16 ]
  ! DIVIDE          [ shift and go to state 17 ]


state 26

    (8) expresion -> LPAREN expresion RPAREN .

    PLUS            reduce using rule 8 (expresion -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 8 (expresion -> LPAREN expresion RPAREN .)
    TIMES           reduce using rule 8 (expresion -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 8 (expresion -> LPAREN expresion RPAREN .)
    $end            reduce using rule 8 (expresion -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 8 (expresion -> LPAREN expresion RPAREN .)


state 27

    (12) expresion -> SQRT LPAREN expresion . RPAREN
    (3) expresion -> expresion . PLUS expresion
    (4) expresion -> expresion . MINUS expresion
    (5) expresion -> expresion . TIMES expresion
    (6) expresion -> expresion . DIVIDE expresion

    RPAREN          shift and go to state 28
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17


state 28

    (12) expresion -> SQRT LPAREN expresion RPAREN .

    PLUS            reduce using rule 12 (expresion -> SQRT LPAREN expresion RPAREN .)
    MINUS           reduce using rule 12 (expresion -> SQRT LPAREN expresion RPAREN .)
    TIMES           reduce using rule 12 (expresion -> SQRT LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 12 (expresion -> SQRT LPAREN expresion RPAREN .)
    $end            reduce using rule 12 (expresion -> SQRT LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 12 (expresion -> SQRT LPAREN expresion RPAREN .)

